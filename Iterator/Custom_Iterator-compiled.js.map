{"version":3,"sources":["Custom_Iterator.js"],"names":[],"mappings":";;;;;;;;AAIA,IAAI,0BACC,OAAO,QAAP,cAAkB;;;AACf,QAAI,KAAK,CAAL;QAAQ,KAAK,CAAL,CADG;AAEf,4CAEK,OAAO,QAAP,cAAkB;AAAC,eAAO,IAAP,CAAD;sDACb;AACF,YAAI,UAAU,EAAV,CADF;AAEE,aAAK,EAAL,CAFF;AAGE,aAAK,KAAK,OAAL,CAHP;AAIF,eAAO,EAAC,OAAQ,OAAR,EAAiB,MAAO,KAAP,EAAzB,CAJE;yDAMC,GAAE;AACT,gBAAQ,GAAR,CAAY,8BAAZ,EADS;AAEL,eAAO,EAAC,OAAQ,CAAR,EAAY,MAAM,IAAN,EAApB,CAFK;YATb,CAFe;EADnB;;;;;;;AAqBJ,yBAAc,6BAAd,oGAAmB;YAAV,gBAAU;;AACf,gBAAQ,GAAR,CAAa,CAAb,EADe;AAEf,YAAI,IAAI,EAAJ,EAAQ,MAAZ;KAFJ","file":"Custom_Iterator-compiled.js","sourcesContent":["/**\r\n * Created by JCLG on 3/22/2016.\r\n */\r\n\r\nvar Fib = {\r\n    [Symbol.iterator](){\r\n        var n1 = 1, n2 = 1;\r\n        return {\r\n            //Make the iterator an iterable\r\n            [Symbol.iterator](){return this; },\r\n            next(){\r\n                var current = n2;\r\n                    n2 = n1;\r\n                    n1 = n1 + current;\r\n                return {value : current, done : false};\r\n            },\r\n            return(v){\r\n            console.log('Fibonacci Sequence Abandoned');\r\n                return {value : v , done: true };\r\n            }\r\n        };\r\n    }\r\n};\r\n\r\n\r\nfor (var v of Fib) {\r\n    console.log( v );\r\n    if (v > 50) break;\r\n}"]}